<Window x:Class="LarkatorGUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LarkatorGUI"
        xmlns:properties="clr-namespace:LarkatorGUI.Properties"
        xmlns:common="clr-namespace:Larkator.Common;assembly=Larkator.Common"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        mc:Ignorable="d"
        x:Name="root"
        d:DataContext="{d:DesignInstance Type={x:Type local:DummyMainWindow}, IsDesignTimeCreatable=True}"
        SourceInitialized="Window_SourceInitialized" Loaded="Window_Loaded"
        Title="{Binding WindowTitle}" Background="{DynamicResource WindowBackgroundBrush}"
        MinHeight="500"
        Left="{Binding Source={StaticResource Settings}, Path=Default.MainWindowLeft, Mode=TwoWay}"
        Top="{Binding Source={StaticResource Settings}, Path=Default.MainWindowTop, Mode=TwoWay}"
        Width="{Binding Source={StaticResource Settings}, Path=Default.MainWindowWidth, Mode=TwoWay}"
        Height="{Binding Source={StaticResource Settings}, Path=Default.MainWindowHeight, Mode=TwoWay}">
    <Window.Resources>
        <Visibility x:Key="Hidden">Hidden</Visibility>
        <local:SearchResultToTooltipConverter x:Key="SearchResultToTooltipConverter"/>
        <local:DinoToTooltipConverter x:Key="DinoToTooltipConverter"/>
        <local:PositionToStringConverter x:Key="PositionToStringConverter"/>
        <local:StatsToStringConverter x:Key="StatsToStringConverter"/>
        <local:PositionToXConverter x:Key="PositionToXConverter"/>
        <local:PositionToYConverter x:Key="PositionToYConverter"/>
        <local:GenderToImageConverter x:Key="GenderToImageConverter"/>
        <local:GenderToLetterConverter x:Key="GenderToLetterConverter"/>
        <local:AddIntConverter x:Key="AddIntConverter"/>

        <ContextMenu x:Key="CreatureMenu">
            <MenuItem Header="Copy teleport cmd" Click="CopyTeleport_Click"/>
        </ContextMenu>

        <ToolTip x:Key="LevelTooltip">
            Use the mouse wheel to adjust levels
        </ToolTip>

        <CollectionViewSource x:Key="GroupedSearchCriteria" Source="{Binding ListSearches}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Group"/>
            </CollectionViewSource.GroupDescriptions>
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Order" Direction="Ascending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <CollectionViewSource x:Key="OrderedResults" Source="{Binding ListResults}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Dino.BaseLevel" Direction="Descending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <Style x:Key="ClearTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="AntiqueWhite"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
        </Style>

        <Style x:Key="CleanRowStyle" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#4884" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CleanDinoRowStyle" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource CleanRowStyle}">
            <Setter Property="ToolTip">
                <Setter.Value>
                    <TextBlock Text="{Binding Path=Dino, Converter={StaticResource DinoToTooltipConverter}}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="ContextMenu" Value="{StaticResource CreatureMenu}"/>
            <Setter Property="IsSelected" Value="{Binding Highlight, Mode=TwoWay}"/>
            <EventSetter Event="MouseEnter" Handler="Result_MouseEnter"/>
            <EventSetter Event="MouseLeave" Handler="Result_MouseLeave"/>
        </Style>
        <Style x:Key="CleanCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource SelectionBackgroundBrush}"/>
                    <Setter Property="Foreground" Value="AntiqueWhite"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource SelectionBackgroundBrush}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="AntiqueWhite"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CleanDataGridStyle" TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="AntiqueWhite"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalOnly"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="True"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="CanUserResizeColumns" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="CanUserSortColumns" Value="False"/>
        </Style>
        <Style x:Key="CleanColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="AntiqueWhite"/>
            <Setter Property="TextBlock.FontSize" Value="12"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Opacity" Value="0.5"/>
        </Style>
        <Style x:Key="CleanGroupItemStyle" TargetType="{x:Type GroupItem}" BasedOn="{StaticResource {x:Type GroupItem}}">
            <Setter Property="Margin" Value="0,0,0,8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Expander IsExpanded="True" Foreground="AntiqueWhite" BorderThickness="0">
                            <Expander.Header>
                                <DockPanel>
                                    <TextBlock FontWeight="Bold" Text="{Binding Path=Name}" Opacity="0.7" Margin="4,0,0,0" local:FontSizeHelper.RelativeFontSize="-2"/>
                                </DockPanel>
                            </Expander.Header>
                            <Expander.Content>
                                <ItemsPresenter />
                            </Expander.Content>
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="MapPinTemplate" DataType="{x:Type local:DinoViewModel}">
            <DataTemplate.Resources>
                <Storyboard x:Key="PinHighlightAnimation" Storyboard.TargetName="scale" Duration="0:0:0.2">
                    <DoubleAnimation Storyboard.TargetProperty="ScaleX" To="3" AutoReverse="True">
                        <DoubleAnimation.EasingFunction>
                            <QuinticEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetProperty="ScaleY" To="3" AutoReverse="True">
                        <DoubleAnimation.EasingFunction>
                            <QuinticEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <ColorAnimation Storyboard.TargetName="stroke" Storyboard.TargetProperty="Color" To="LightGoldenrodYellow"/>
                </Storyboard>
            </DataTemplate.Resources>
            <Grid>
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="{Binding Source={StaticResource Settings}, Path=Default.PinScale}" ScaleY="{Binding Source={StaticResource Settings}, Path=Default.PinScale}" />
                        <ScaleTransform x:Name="scale" CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1" />
                        <TranslateTransform local:MapPositionConverter.Position="{Binding Dino.Location}"
                                        local:MapPositionConverter.Calibration="{Binding DataContext.MapCalibration, ElementName=root}"/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Rectangle Width="2" Height="2" RadiusX="1" RadiusY="1" RenderTransformOrigin="0.5,0.5" Margin="-1" Fill="#FFFF0808"/>
                <Rectangle x:Name="rect" Width="30" Height="30" RadiusX="15" RadiusY="15" StrokeThickness="5" Margin="-15"
                       Fill="Transparent" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5"
                       ToolTip="{Binding Dino, Converter={StaticResource DinoToTooltipConverter}}" MouseDown="MapPin_Click">
                    <Rectangle.Stroke>
                        <SolidColorBrush x:Name="stroke" Color="{Binding Color}"/>
                    </Rectangle.Stroke>
                </Rectangle>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Highlight}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="highlightStoryboard" Storyboard="{StaticResource PinHighlightAnimation}"/>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="highlightStoryboard"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <FrameworkElement x:Name="dummyElement"/>

        <Border x:Name="statusPanel" Grid.Row="1" Background="#20402080" Padding="8,6,8,3">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="{Binding StatusText}" TextWrapping="NoWrap" Foreground="AntiqueWhite" Opacity="0.5"/>
                <TextBlock Grid.Column="1" Text="{Binding StatusDetailText}" TextWrapping="NoWrap" Foreground="AntiqueWhite" Opacity="0.5" HorizontalAlignment="Right"/>
                <TextBlock Grid.Column="2" Margin="10,0,10,0" Foreground="#FFAAFF" Opacity="0.7"
                           Visibility="{Binding SftpConfig.UseSftp, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="Last Modified: {0:yyyy-MM-dd HH:mm:ss}">
                            <Binding Path="LastSavegameModifiedDate" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <StackPanel Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Center"
                          Visibility="{Binding SftpConfig.UseSftp, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock Text="Server:" Foreground="#FFAAFF" Opacity="0.7" Margin="8,0,5,0" VerticalAlignment="Center"/>
                    <ComboBox x:Name="ServerProfilesComboBox" Width="150" Margin="0,0,5,0" 
                             ItemsSource="{Binding SftpProfileManager.Profiles}" 
                             SelectedItem="{Binding SftpProfileManager.SelectedProfile}" 
                             DisplayMemberPath="Name"
                             ToolTip="Select a server profile"/>
                    <fa:ImageAwesome Icon="Cog" Height="14" Width="14" Margin="0,0,8,0" Foreground="#FFAAFF" Opacity="0.7" 
                                   MouseDown="ServerProfiles_Click" VerticalAlignment="Center" Cursor="Hand"
                                   ToolTip="Manage server profiles"/>
                    <TextBlock Text="SFTP Mode" Foreground="#FFAAFF" Opacity="0.7" Margin="8,0,0,0" FontWeight="Bold"/>
                </StackPanel>
            </Grid>
        </Border>

        <Grid Grid.Row="0" TextBlock.Foreground="AntiqueWhite">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid x:Name="leftPanel" Grid.Column="0" Width="270" MinHeight="200" Background="{DynamicResource WindowBackgroundBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <TextBlock Visibility="{Binding ShowHunt, Converter={StaticResource BoolToVisibilityConverter}}" FontSize="24" TextAlignment="Center" Text="The Hunt"/>
                    <TextBlock Visibility="{Binding ShowTames, Converter={StaticResource BoolToVisibilityConverter}}" FontSize="24" TextAlignment="Center"  Text="Tames"/>
                </Grid>

                <DataGrid x:Name="searchesList" Grid.Row="1" Margin="8" IsReadOnly="True"
                          ItemsSource="{Binding Source={StaticResource GroupedSearchCriteria}}" AutoGenerateColumns="False"
                          SelectionChanged="Searches_SelectionChanged" SelectionMode="Single" SelectionUnit="FullRow"
                          TextBlock.FontSize="{Binding Source={StaticResource Settings}, Path=Default.ListFontSize}"
                          Style="{DynamicResource CleanDataGridStyle}" RowStyle="{DynamicResource CleanRowStyle}"
                          ColumnHeaderStyle="{DynamicResource CleanColumnHeaderStyle}" CellStyle="{DynamicResource CleanCellStyle}"
                          dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding ElementName=root}">

                    <DataGrid.GroupStyle>
                        <GroupStyle ContainerStyle="{StaticResource CleanGroupItemStyle}"/>
                    </DataGrid.GroupStyle>

                    <DataGrid.Columns>
                        <DataGridTemplateColumn Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Species}" TextAlignment="Left" Margin="0,0,2,0" 
                                               TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Sex">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Margin="0" Height="{Binding ElementName=searchesList, Path=(TextBlock.FontSize), Converter={StaticResource AddIntConverter}, ConverterParameter=6}"
                                           Source="{Binding Female, Converter={StaticResource GenderToImageConverter}}"
                                           MouseWheel="AdjustableGender_MouseWheel" PreviewMouseDown="AdjustableGender_Click"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Min">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding MinLevel, ConverterParameter=-, Converter={StaticResource OptionalIntConverter}}"
                                               MouseWheel="AdjustableInteger_MouseWheel" Margin="2,0" ToolTip="{StaticResource LevelTooltip}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Max">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding MaxLevel, ConverterParameter=-, Converter={StaticResource OptionalIntConverter}}"
                                               MouseWheel="AdjustableInteger_MouseWheel" Margin="2,0" ToolTip="{StaticResource LevelTooltip}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Visibility="{Binding DataContext.ShowHunt, Source={x:Reference dummyElement}, Converter={StaticResource BoolToVisibilityConverter}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Click="RemoveSearch_Click" Padding="0" Margin="0">
                                        <fa:ImageAwesome Icon="Remove" Width="8" Margin="0" Foreground="AntiqueWhite" ToolTip="Remove this search"/>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>

                <StackPanel Grid.Row="2" Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,8" Visibility="{Binding ShowTames, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Border BorderThickness="0,0,0,1" BorderBrush="#4FFF">
                            <StackPanel Orientation="Horizontal" TextBlock.FontSize="{Binding Source={StaticResource Settings}, Path=Default.ListFontSize}">
                                <TextBox x:Name="searchText" Width="140" AcceptsReturn="False" Style="{StaticResource ClearTextBox}"
                                         Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PreviewKeyDown="SearchText_KeyDown"
                                         VerticalContentAlignment="Bottom" Padding="2,0,2,2" local:FontSizeHelper.RelativeFontSize="+2"/>
                                <Button Click="ClearSearch_Click" BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}"
                                        Margin="4,4,8,3" Padding="3,0" ToolTip="Clear search term">
                                    <fa:ImageAwesome Icon="Close" Width="10" Foreground="AntiqueWhite" Opacity="0.6"/>
                                </Button>
                            </StackPanel>
                        </Border>
                        <fa:ImageAwesome Icon="Search" Width="24" Foreground="AntiqueWhite" Margin="8,0,0,0" Opacity="0.6" MouseDown="Search_Click"/>
                    </StackPanel>
                    <Button Width="32" FontFamily="Arial Black" FontSize="28" FontWeight="Bold" Padding="-4" Margin="16" Content="+" Click="CreateSearch_Click"
                            Visibility="{Binding CreateSearchAvailable, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <Grid Margin="16,0,16,16" Visibility="{Binding NewSearchActive, Converter={StaticResource BoolToVisibilityConverter}}" Background="#44ffffff">
                        <StackPanel Margin="8" Orientation="Vertical" HorizontalAlignment="Stretch" DataContext="{Binding NewSearch}" d:DataContext="{d:DesignInstance Type={x:Type local:DummyNewSearch}, IsDesignTimeCreatable=True}">
                            <ComboBox x:Name="groupsCombo" Text="{Binding Group}" IsEditable="True" />
                            <ComboBox x:Name="speciesCombo" Text="{Binding Species}" IsEditable="True" StaysOpenOnEdit="True" GotFocus="ComboOpen" AllowDrop="True"/>
                            <Grid Margin="4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="Min" HorizontalAlignment="Right" Margin="8,2"/>
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="Max" HorizontalAlignment="Right" Margin="8,2"/>
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="Partial match" HorizontalAlignment="Right" Margin="8,2"
                                           ToolTip="Match species that contain the given string" />
                                <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding MinLevel, ConverterParameter=-, Converter={StaticResource OptionalIntConverter}}"
                                           HorizontalAlignment="Left" VerticalAlignment="Center" Width="32" TextAlignment="Center" MouseWheel="AdjustableInteger_MouseWheel"/>
                                <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding MaxLevel, ConverterParameter=-, Converter={StaticResource OptionalIntConverter}}"
                                           HorizontalAlignment="Left" VerticalAlignment="Center" Width="32" TextAlignment="Center" MouseWheel="AdjustableInteger_MouseWheel"/>
                                <CheckBox Grid.Column="1" Grid.Row="2" ToolTip="Match species that contain the given string" HorizontalAlignment="Left" Margin="6,4,0,0"
                                          IsChecked="{Binding GroupSearch, FallbackValue=False}"/>
                            </Grid>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="4">
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Button Width="32" FontFamily="Arial Black" FontSize="28" FontWeight="Bold" Padding="-4" Margin="4,0" Content="+" Click="SaveSearch_Click" ToolTip="Save this search" />
                                <Button Click="CloseNewSearch_Click" BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}" ToolTip="Cancel">
                                    <fa:ImageAwesome Icon="Close" Width="10" Foreground="AntiqueWhite" Opacity="0.8"/>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </Grid>

                    <Grid>
                        <TextBlock HorizontalAlignment="Center" Visibility="{Binding ShowHunt, Converter={StaticResource BoolToVisibilityConverter}}" MouseDown="ShowTames_Click"><Underline><Run Text="Show Tames"/></Underline></TextBlock>
                        <TextBlock HorizontalAlignment="Center" Visibility="{Binding ShowTames, Converter={StaticResource BoolToVisibilityConverter}}" MouseDown="ShowTheHunt_Click"><Underline><Run Text="Show The Hunt"/></Underline></TextBlock>
                    </Grid>
                </StackPanel>
            </Grid>

            <Viewbox Grid.Column="1" MinWidth="240" MinHeight="240">
                <Grid>
                    <Image x:Name="image" Source="{Binding MapImage, FallbackValue=imgs/map_TheIsland.jpg}" />
                    <Canvas>
                        <ItemsControl x:Name="map" ItemTemplate="{DynamicResource MapPinTemplate}" ItemsSource="{Binding Source={StaticResource OrderedResults}}"/>
                    </Canvas>
                    <fa:ImageAwesome Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue={StaticResource Hidden}}"
                                     Icon="cog" Spin="True" SpinDuration="3" Width="360" Height="360" Foreground="#88ffffff"/>
                </Grid>
            </Viewbox>

            <Grid x:Name="rightPanel" Grid.Column="2" Width="360" MinHeight="200" Background="{DynamicResource WindowBackgroundBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" FontSize="24" TextAlignment="Center" Text="The Chase" Margin="0"/>

                <DataGrid Grid.Row="1" x:Name="resultsList" Margin="8" AutoGenerateColumns="False" IsReadOnly="True"
                          ItemsSource="{Binding Source={StaticResource OrderedResults}}"
                          TextBlock.FontSize="{Binding Default.ListFontSize, Source={StaticResource Settings}}"
                          SelectionMode="Extended" SelectionUnit="FullRow" CanUserSortColumns="True" Sorting="ResultList_Sorting"
                          Style="{DynamicResource CleanDataGridStyle}" RowStyle="{DynamicResource CleanDinoRowStyle}"
                          ColumnHeaderStyle="{DynamicResource CleanColumnHeaderStyle}" CellStyle="{DynamicResource CleanCellStyle}"
                          >
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Sex" Width="0.7*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Margin="0" Height="{Binding ElementName=resultsList, Path=(TextBlock.FontSize), Converter={StaticResource AddIntConverter}, ConverterParameter=6}"
                                           Source="{Binding Dino.Female, Converter={StaticResource GenderToImageConverter}}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Lvl" Width="1.2*" Binding="{Binding Dino.BaseLevel}"/>
                        <DataGridTextColumn Header="Pos" Width="2.2*" Binding="{Binding Path=Dino.Location, Converter={StaticResource PositionToStringConverter}}"/>
                        <DataGridTextColumn Header="Hp" Visibility="{Binding Source={StaticResource Settings}, Path=Default.ShowHealth, Converter={StaticResource BoolToVisibilityConverter}}" Width="1*" Binding="{Binding Path=Dino.WildLevels.Health}"/>
                        <DataGridTextColumn Header="St" Visibility="{Binding Source={StaticResource Settings}, Path=Default.ShowStam, Converter={StaticResource BoolToVisibilityConverter}}" Width="1*" Binding="{Binding Path=Dino.WildLevels.Stamina}"/>
                        <DataGridTextColumn Header="Ox" Visibility="{Binding Source={StaticResource Settings}, Path=Default.ShowOxygen, Converter={StaticResource BoolToVisibilityConverter}}" Width="1*" Binding="{Binding Path=Dino.WildLevels.Oxygen}"/>
                        <DataGridTextColumn Header="Fd" Visibility="{Binding Source={StaticResource Settings}, Path=Default.ShowFood, Converter={StaticResource BoolToVisibilityConverter}}" Width="1*" Binding="{Binding Path=Dino.WildLevels.Food}"/>
                        <DataGridTextColumn Header="We" Visibility="{Binding Source={StaticResource Settings}, Path=Default.ShowWeight, Converter={StaticResource BoolToVisibilityConverter}}" Width="1*" Binding="{Binding Path=Dino.WildLevels.Weight}"/>
                        <DataGridTextColumn Header="Me" Visibility="{Binding Source={StaticResource Settings}, Path=Default.ShowMelee, Converter={StaticResource BoolToVisibilityConverter}}" Width="1*" Binding="{Binding Path=Dino.WildLevels.Melee}"/>
                        <DataGridTextColumn Header="Sp" Visibility="{Binding Source={StaticResource Settings}, Path=Default.ShowSpeed, Converter={StaticResource BoolToVisibilityConverter}}" Width="1*" Binding="{Binding Path=Dino.WildLevels.Speed}"/>
                    </DataGrid.Columns>
                </DataGrid>

                <TextBlock Grid.Row="2" HorizontalAlignment="Center" Visibility="{Binding ShowCounts, Converter={StaticResource BoolToVisibilityConverter}}">
                    Matching <TextBlock Text="{Binding ResultMatchingCount, FallbackValue=?}"/> of <TextBlock Text="{Binding ResultTotalCount, FallbackValue=?}"/> creatures
                </TextBlock>

                <StackPanel Grid.Row="3" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal" Margin="0,0,16,0"
                        Visibility="{Binding IsDevMode, Converter={StaticResource BoolToVisibilityConverter}}">
                        <fa:ImageAwesome Icon="Bug" Height="30" Width="30" Margin="8" Foreground="#88FFFF00" ToolTip="Add dummy map points" MouseDown="Dev_DummyData_Click"/>
                        <fa:ImageAwesome Icon="MapPin" Height="30" Width="30" Margin="8" Foreground="#88FFFF00" ToolTip="Add calibration points from Savefile (boxes named &quot;Calibration: XX.X, YY.Y&quot;)" MouseDown="Dev_CalibrationData_Click"/>
                        <fa:ImageAwesome Icon="Crop" Height="30" Width="30" Margin="8" Foreground="#88FFFF00" ToolTip="Calibration" MouseDown="Dev_Calibration_Click"/>
                        <fa:ImageAwesome Icon="Bomb" Height="30" Width="30" Margin="8" Foreground="#88FFFF00" ToolTip="Generate exception and exit" MouseDown="Dev_GenerateException_Click"/>
                        <fa:ImageAwesome Icon="Remove" Height="30" Width="30" Margin="8" Foreground="#88FFFF00" ToolTip="Remove user settings &amp; exit" MouseDown="Dev_RemoveSettings_Click"/>
                    </StackPanel>
                    <fa:ImageAwesome Icon="cogs" Width="30" Height="30" Margin="8" Foreground="#44ffffff" ToolTip="Settings" MouseDown="Settings_Click"/>
                    <fa:ImageAwesome Icon="refresh" Width="30" Height="30" Margin="8" Foreground="#44ffffff" ToolTip="Reload savegame" MouseDown="Refresh_Click"/>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</Window>
